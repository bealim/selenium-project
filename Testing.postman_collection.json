{
	"info": {
		"_postman_id": "1b89a7d5-f6ae-408d-81af-c8eb7d6bd729",
		"name": "Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "11859573"
	},
	"item": [
		{
			"name": "brandsList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse = pm.response.json()\r",
							"\r",
							"pm.test(\"Response code is \" + jsonResponse.responseCode, function () {\r",
							"    pm.expect(jsonResponse.responseCode).to.equal(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Verify brands property is displayed\", function() {\r",
							"    pm.expect(jsonResponse).to.have.property('brands')\r",
							"})\r",
							"\r",
							"pm.test(\"Verify id and brand properties are displayed\", function() {\r",
							"    const brands = jsonResponse.brands\r",
							"\r",
							"    pm.expect(brands).to.be.an('array').that.is.not.empty\r",
							"\r",
							"    for (let i = 0; i < brands.length; i++) {\r",
							"        const brand = brands[i]\r",
							"\r",
							"        pm.expect(brand).to.have.property('id')\r",
							"        pm.expect(brand).to.have.property('brand')\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{URL}}/api/brandsList"
			},
			"response": []
		},
		{
			"name": "searchProduct",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"search_product\": \"shirt\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://automationexercise.com/api/searchProduct"
			},
			"response": []
		}
	]
}